
version: '2.1'
services:
 db:
   image: mysql:5.7
   environment:
     MYSQL_DATABASE: djangodocker_db
     MYSQL_ROOT_PASSWORD: 555236
   ports:
     - "3306:3306"
   networks:
     - eshop
   restart: on-failure
   healthcheck:
     test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
     timeout: 20s
     retries: 10
        
        
 nginx:
   image: nginx
   volumes:
     - ./eShop/eShop/nginx.conf:/etc/nginx/conf.d/default.conf:ro
     - ./eShop/serverStatic:/usr/share/nginx/djangodocker/static
   ports:
     - "80:80"
   networks:
     - eshop
   links:
     - web
   restart: on-failure

        
 web:
   build: .
   image: &web web
   restart: "no"
   command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8001"
   ports:
     - "8001:8001"
   networks:
     - eshop
   volumes:
     - ./eShop:/eShop
   links:
     - db
   depends_on:
     - celery
   restart: on-failure

            
 rabbit:
   hostname: rabbit
   image: rabbitmq:latest
   environment:
     - RABBITMQ_DEFAULT_USER=admin
     - RABBITMQ_DEFAULT_PASS=mypass
   healthcheck:
       test: ["CMD", "curl", "-f", "http://localhost:15672"]
       interval: 30s
       timeout: 10s
       retries: 5
   networks:
     - eshop
   restart: on-failure



 celery:
   build: .
   command: celery worker --app=eShop.celeryapp:app
   volumes:
     - ./eShop:/eShop
   links:
     - rabbit
   depends_on:
    
     db:
       condition: service_healthy
   networks:
     - eshop
   restart: on-failure


networks:
 eshop:
   # Use a custom driver
   driver: bridge
